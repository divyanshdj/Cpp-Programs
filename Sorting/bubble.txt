//Bubble Sort Algorithm + Complexity

Bubble Sort is a simple sorting algorithm that repeatedly steps through the list, compares adjacent elements, and swaps them if they are in the wrong order. The time and space complexity of Bubble Sort is as follows:

Time Complexity:
# In the worst-case - O(n^2). ( where 'n' is the number of elements in the array )
# In the best-case - O(n). (when the array is already sorted)
# The average-case - O(n^2).

Space Complexity:
# The space complexity of Bubble Sort is O(1).
# Bubble Sort is an in-place sorting algorithm, meaning it doesn't require additional memory to be allocated for sorting.

// Bubble Sort:-

# in each traverse we are move biggest number in back of the array

void bubbleSort(int *arr,int n){
	for(int i=0;i<n;i++){
		for(int j=0;j<n-i;j++){
			if(arr[j]>arr[j+1]){
				swap(arr[j],arr[j+1]);
			}
		}
	}
}